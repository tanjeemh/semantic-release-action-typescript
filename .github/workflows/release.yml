---
name: Release

on:
  workflow_call:
    inputs:
      test-node-versions:
        description: Node.js versions to use for testing
        type: string
        default: "['lts/-2', 'lts/-1', 'lts/*']"
      test-command:
        description: Command used to test your TypeScript program
        required: false
        type: string
        default: npm run --if-present test
      release-node-version:
        description: Node.js version to use for releasing
        type: string
        default: lts/*
      allow-postinstall-scripts:
        description: Flag to permit post-install scripts
        type: boolean
        default: false
      disable-semantic-release-git:
        description: Disable @semantic-release/git in your release flow. Only takes effect if the action semantic-release config is used.
        type: boolean
        default: false
    secrets:
      npm-token:
        description: API token for writing to your npm registry
        required: true

# Only allow one release workflow to execute at a time, since each release
# workflow uses shared resources (git tags, package registries)
concurrency:
  group: ${{ github.workflow }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ${{ fromJson(inputs.test-node-versions) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
          cache: npm

      - name: Cache npm dependencies
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          : install npm dependencies
          npm ci --loglevel error "$allow_postinstall_scripts"
        env:
          # Negate the logic here because the value after && must not be falsy, otherwise the || will also execute
          allow_postinstall_scripts: ${{ !inputs.allow-postinstall-scripts && '--ignore-scripts' || '' }}
        shell: bash

      - run: |
          : compile TypeScript
          npm run --if-present build
        shell: bash

      - run: |
          : test
          ${{ inputs.test-command }}
        shell: bash

  release:
    name: Release
    runs-on: ubuntu-latest

    needs:
      - test

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v6
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - name: Release using semantic-release/npm@13.1.0-beta.1
        run: |
          echo "TEST: Installing semantic-release/npm@13.1.0-beta.1..."
          npm install --no-save semantic-release @semantic-release/npm@13.1.0-beta.1
          echo "TEST: Running semantic-release --dry-run..."
          npx semantic-release --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.npm-token }}
